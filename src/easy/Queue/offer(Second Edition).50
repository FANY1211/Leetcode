思路：
使用哈希表
举个例子：商店里有很多商品，每个商品有不同的价格，如何快速查找到某个商品对应的价格？而不是在长长的商品明细中挨个查找
答案：利用哈希函数
商品名称 -> 哈希函数 -> 整数
商品名称被哈希函数转化为了一个整数（同样的商品名称，返回的整数是相同的；不同商品，返回的整数是不同的）
把这个整数转化为内存地址，然后就把不同商品对应的价格放到相应地址的内存中
等到要调用的时候，就把商品名称进行哈希运算，结果返回一个整数，去这个整数对应的内存地址取价格

通过哈希函数实现数据到存储位置的一对一映射，从而把数据的属性放在一张表（数组）里，这个表就叫哈希表（散列表）
python中的字典也用到了哈希表

所以，这里使用python中的字典构建哈希表
class Solution:
    def firstUniqChar(self, s: str) -> str:
        dict = {}
        for c in s:
            dict[c] = c not in dict #注意字典在给键赋值时用的时[]，不是{}
        for c in s:
            if dict[c]:
                return c
        return ' '
