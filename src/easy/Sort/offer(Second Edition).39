方法一：
使用内置函数排序，并输出中位数，则定是众数
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        nums.sort()
        return nums[len(nums) // 2]
 
 
 方法二:
 使用内置计数函数，返回最大值
 class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        count = collections.Counter(nums)
        return max(count.keys(), key=count.get)
        

总觉得这个排序应该自己写出来，然后写了个冒泡排序：（时间复杂度O(n²) 哈哈哈 执行超过时间限制）
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        r = len(nums) - 1
        while r > 0:
            for i in range(len(nums) - 1):
                if nums[i] > nums[i+1]:
                    nums[i], nums[i+1] = nums[i+1], nums[i]
            r -= 1
        return nums[len(nums) // 2]

那用快排怎么写？下次
