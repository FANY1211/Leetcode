思路；
本题是利用一个“换位”的思想，原理上类似于哈希表：
因为题目中说（1）数组中的元素都在0 ~ n-1之间
           （2）数组中有元素是重复的
那么我们可以得出一个结论：如果让每个元素和0 ~ n-1个索引一一对应，必然有的索引要对应至少一个元素，也会导致有的索引无元素可对应
因此，遍历数组，将每个元素和它应该对应的索引放到一起，
如果需要返回任意一个重复的元素，那么就把第一个需要对应两个元素的索引指向的元素输出
如果需要返回所有重复的元素，那么就把所有对应至少两个元素的索引指向的元素输出

class Solution:
    def findRepeatNumber(self, nums: List[int]) -> int:
        for i in range(len(nums)):  #遍历数组
            while nums[i] != i:  #只要索引和值不对应，那么就得换
                if nums[nums[i]] == nums[i]:   #在换之前要先看一下应该属于自己的位置有没有人占领，有的话就输出
                    return nums[i]
                else:    #没人占领，那自己就去占领
                    nums[nums[i]], nums[i] = nums[i], nums[nums[i]]
