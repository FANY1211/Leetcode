思路：
使用二分查找，如果mid大于左边界的数，说明最小值就在[mid + 1, r]中；
如果mid小于左边界的数，说明最小值就在[l, mid]中
但这样做不出来。。。。不知道根本原因是什么。。。

二分目的是判断 m 在哪个排序数组中，从而缩小区间。而在 nums[m] > nums[i]情况下，无法判断 m 在哪个排序数组中。


但如过换成mid 和 r比，就能算出来。。。

class Solution:
    def minArray(self, numbers: List[int]) -> int:
        l, r = 0, len(numbers) - 1
        while l < r:
            mid = l + (r - l) // 2
            if numbers[mid] > numbers[r]:
                l = mid + 1
            elif numbers[mid] < numbers[r]:
                r = mid
            else:
                r -= 1

        return numbers[l]
